import React, { useState } from "react";
import { useNavigate } from "react-router-dom";

const plans = [
  {
    name: "G√≥i C∆° b·∫£n",
    description: "Mi·ªÖn ph√≠ v·ªõi t√≠nh nƒÉng gi·ªõi h·∫°n",
    price: "0ƒë",
  },
  {
    name: "G√≥i Pro",
    description: "To√†n b·ªô b√†i h·ªçc & AI",
    price: "99.000ƒë / th√°ng",
  },
  {
    name: "G√≥i Premium",
    description: "H·ªó tr·ª£ c√° nh√¢n & b√°o c√°o",
    price: "199.000ƒë / th√°ng",
  },
];

const paymentMethods = ["üí≥ Th·∫ª t√≠n d·ª•ng", "üì± Momo", "üí∏ Chuy·ªÉn kho·∫£n"];

const UpgradeForm = () => {
  const [selectedMethod, setSelectedMethod] = useState("üí≥ Th·∫ª t√≠n d·ª•ng");
  const [selectedPlan, setSelectedPlan] = useState("G√≥i Pro"); // M·∫∑c ƒë·ªãnh ch·ªçn Pro
  const navigate = useNavigate();

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (selectedMethod === "üì± Momo") {
      navigate("/momo-payment");
    } else {
      navigate("/payment-success");
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 text-gray-800 p-4 sm:p-6">
      <div className="max-w-4xl mx-auto mt-8 p-4 sm:p-8 bg-white shadow-2xl rounded-2xl">
        <h1 className="text-2xl sm:text-3xl font-bold mb-6 text-center">N√¢ng c·∫•p t√†i kho·∫£n</h1>

        {/* G√≥i d·ªãch v·ª• */}
        <div className="mb-8 grid grid-cols-1 sm:grid-cols-3 gap-4">
          {plans.map((plan, idx) => (
            <div
              key={idx}
              onClick={() => setSelectedPlan(plan.name)}
              className={`border-2 rounded-xl p-4 cursor-pointer transition 
                ${selectedPlan === plan.name
                  ? "border-blue-600 bg-blue-50 shadow-lg"
                  : "border-gray-300 hover:border-blue-600"
                }`}
            >
              <h2 className={`text-lg font-semibold ${selectedPlan === plan.name ? "text-blue-700" : ""}`}>
                {plan.name}
              </h2>
              <p className="mt-2 text-gray-600 text-sm">{plan.description}</p>
              <p className={`text-xl font-bold mt-3 ${selectedPlan === plan.name ? "text-blue-700" : ""}`}>
                {plan.price}
              </p>
            </div>
          ))}
        </div>

        {/* Bi·ªÉu m·∫´u thanh to√°n */}
        <form className="space-y-6" onSubmit={handleSubmit}>
          <div>
            <label className="block text-sm font-medium mb-1" htmlFor="card-name">T√™n tr√™n th·∫ª</label>
            <input
              type="text"
              id="card-name"
              className="w-full border border-gray-300 rounded-lg p-3"
              placeholder="Nguy·ªÖn VƒÉn A"
              required
            />
          </div>
          <div>
            <label className="block text-sm font-medium mb-1" htmlFor="card-number">S·ªë th·∫ª</label>
            <input
              type="text"
              id="card-number"
              className="w-full border border-gray-300 rounded-lg p-3"
              placeholder="1234 5678 9012 3456"
              required
            />
          </div>

          <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium mb-1" htmlFor="expiry">Ng√†y h·∫øt h·∫°n</label>
              <input
                type="text"
                id="expiry"
                className="w-full border border-gray-300 rounded-lg p-3"
                placeholder="MM/YY"
                required
              />
            </div>
            <div>
              <label className="block text-sm font-medium mb-1" htmlFor="cvc">CVC</label>
              <input
                type="text"
                id="cvc"
                className="w-full border border-gray-300 rounded-lg p-3"
                placeholder="123"
                required
              />
            </div>
          </div>

          {/* Ph∆∞∆°ng th·ª©c thanh to√°n */}
          <div>
            <p className="font-medium mb-2">Ch·ªçn ph∆∞∆°ng th·ª©c thanh to√°n:</p>
            <div className="flex flex-col sm:flex-row gap-4">
              {paymentMethods.map((method) => (
                <button
                  type="button"
                  key={method}
                  onClick={() => setSelectedMethod(method)} // ƒê√É S·ª¨A ƒê√öNG
                  className={`w-full sm:w-auto px-4 py-2 border rounded-lg transition ${
                    selectedMethod === method ? "bg-blue-100 border-blue-600" : "hover:bg-gray-100"
                  }`}
                >
                  {method}
                </button>
              ))}
            </div>
          </div>

          {/* N√∫t x√°c nh·∫≠n */}
          <div className="text-center">
            <button 
              type="submit"
              className="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-xl text-lg shadow-lg transition"
            >
              Thanh to√°n ngay
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default UpgradeForm;